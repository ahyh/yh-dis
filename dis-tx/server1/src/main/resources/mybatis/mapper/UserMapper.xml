<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.tx.server1.dao.UserMapper">

    <resultMap id="BaseResultMap" type="User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="INTEGER"/>
        <result column="user_status" property="userStatus" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="allColumnsWithOutId">
        (username,password,phone,email,user_type,user_status,create_time,update_time,create_user,update_user,is_delete)
    </sql>

    <sql id="allColumns">
        id,username,password,phone,email,user_type,user_status,create_time,update_time,create_user,update_user,is_delete
    </sql>

    <select id="getUserById" resultType="User">
        SELECT * FROM user WHERE id=#{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user
        <include refid="allColumnsWithOutId"/>
        values (
        #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{userType,jdbcType=TINYINT},
        #{userStatus,jdbcType=TINYINT},
        now(),
        now(),
        #{createUser,jdbcType=VARCHAR},
        #{createUser,jdbcType=VARCHAR},
        0
        )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into USER
        <include refid="allColumnsWithOutId"/>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")">
                #{item.username,jdbcType=VARCHAR},
                #{item.password,jdbcType=VARCHAR},
                #{item.phone,jdbcType=VARCHAR},
                #{item.email,jdbcType=VARCHAR},
                #{item.userType,jdbcType=TINYINT},
                #{item.userStatus,jdbcType=TINYINT},
                now(),
                now(),
                #{item.createUser,jdbcType=VARCHAR},
                #{item.createUser,jdbcType=VARCHAR},
                0
            </trim>
        </foreach>
    </insert>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from user where id = #{id,jdbcType=BIGINT}
    </delete>

    <update id="updateUser" parameterType="User">
        update USER
        <set>
            <trim>
                <if test="username != null and username != ''">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null and password != ''">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="phone != null and phone != ''">
                    phone = #{phone,jdbcType=VARCHAR},
                </if>
                <if test="email != null and email != ''">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="userType != null">
                    user_type = #{userType,jdbcType=INTEGER},
                </if>
                <if test="userStatus != null">
                    user_status = #{userStatus,jdbcType=INTEGER},
                </if>
            </trim>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>